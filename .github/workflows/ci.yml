name: CI

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  # Fast verification job - runs first without waiting for DB setup
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: 'overtime-tracker/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./overtime-tracker
        run: npm ci
      
      - name: Type check
        working-directory: ./overtime-tracker
        run: npm run typecheck
      
      - name: Lint code
        working-directory: ./overtime-tracker
        run: npm run lint
      
      - name: Run unit tests
        working-directory: ./overtime-tracker
        run: npm run test:unit
      
      - name: Build project
        working-directory: ./overtime-tracker
        run: npm run build

  # Integration tests with Postgres service
  integration:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: 'overtime-tracker/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./overtime-tracker
        run: npm ci
      
      - name: Setup test database
        working-directory: ./overtime-tracker
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        run: |
          # Run database migrations
          npm run db:migrate
          # Note: No seed script exists, but migrations should set up schema
      
      - name: Run integration tests
        working-directory: ./overtime-tracker
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        run: npm run test:integration

  # E2E tests with Postgres service
  e2e:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: 'overtime-tracker/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./overtime-tracker
        run: npm ci
      
      - name: Setup test database
        working-directory: ./overtime-tracker
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        run: |
          # Run database migrations
          npm run db:migrate
          # Note: No seed script exists, but migrations should set up schema
      
      - name: Run e2e tests
        working-directory: ./overtime-tracker
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        run: npm run test:e2e
{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(git init:*)",
      "Bash(npm init:*)",
      "Bash(npm pkg set:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npm run test:unit:*)",
      "Bash(npm install)",
      "Bash(npm run docker:up:*)",
      "Bash(node:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(npm test)",
      "Bash(npm run test:integration:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run build:*)",
      "Bash(git pull:*)",
      "Bash(git stash:*)",
      "Read(//var/folders/sh/8lvj4gk16pz9fv4gcr2rdj600000gn/T/TemporaryItems/NSIRD_screencaptureui_pBocd1/**)",
      "Read(//var/folders/sh/8lvj4gk16pz9fv4gcr2rdj600000gn/T/TemporaryItems/NSIRD_screencaptureui_ZzuFKi/**)",
      "Read(//var/folders/sh/8lvj4gk16pz9fv4gcr2rdj600000gn/T/TemporaryItems/NSIRD_screencaptureui_NN7JaJ/**)",
      "Bash(npx tsc:*)",
      "Bash(npx typescript:*)",
      "Bash(./node_modules/.bin/tsc:*)",
      "Bash(npm run verify:*)",
      "Bash(npm run lint)",
      "Bash(git rm:*)",
      "Bash(echo:*)",
      "Bash(npm run:*)",
      "Bash(docker:*)",
      "Bash(open:*)",
      "Bash(curl:*)",
      "Bash(cross-env:*)",
      "Bash(DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test npm run db:migrate)",
      "Bash(DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test npx tsx -e \"\nimport { db } from ''./src/db/connection.js'';\nimport { resetDb } from ''./src/db/testReset.js'';\nawait resetDb(db);\nconsole.log(''Test database reset complete'');\nprocess.exit(0);\n\")",
      "Bash(DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test tsx scripts/reset-test-db.ts)",
      "Bash(DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test npx tsx scripts/reset-test-db.ts)",
      "Bash(TEST_DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test NODE_ENV=test npm run test:integration)",
      "Bash(TEST_DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test NODE_ENV=test npm run test:e2e)",
      "Bash(TEST_DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test NODE_ENV=test npx jest tests/integration/assignments.test.ts -t \"should assign to employee with lowest total hours\" --testTimeout=30000)",
      "Bash(TEST_DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test NODE_ENV=test npm run test:all)",
      "Bash(TEST_DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test NODE_ENV=test npm run test:integration -- --verbose)",
      "Bash(TEST_DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test NODE_ENV=test npx jest tests/integration/assignments.test.ts -t \"should correctly calculate overtime summary including assignments\" --verbose)",
      "Bash(TEST_DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test NODE_ENV=test npx jest tests/integration/assignments.test.ts --verbose)",
      "Bash(TEST_DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test NODE_ENV=test npx jest tests/integration/assignments.test.ts -t \"should still affect next assignment ordering after refusal\" --verbose)",
      "Bash(TEST_DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test DATABASE_URL=postgres://postgres:postgres@localhost:5432/ot_mta2_test NODE_ENV=test npx jest tests/integration/concurrency.test.ts --verbose)"
    ],
    "deny": [],
    "ask": []
  }
}